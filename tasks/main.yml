---
# tasks file for myrostadler.centos7_symfony4_website
- name: Get install directory
  set_fact: website_install_dir="/var/www/{{ website_install_dir_name }}"

- name: Get mysql server version
  command: "mysql -uroot -p{{ website_install_env_database_root_password }} -e 'SELECT VERSION();'"
  register: website_install_mysql_server_version
  changed_when: false

- name: Get DB server version
  set_fact: website_install_env_database_server_version="{{ website_install_mysql_server_version.stdout_lines[1] }}"

- name: Show DB server version
  debug:
    msg: "{{ website_install_env_database_server_version }}"

#- name: Get the remote user
#  become: false
#  command: whoami
#  register: remote_user
#  changed_when: false
#
#- name: Get remote user
#  set_fact: remote_username="{{ remote_user.stdout }}"
#
#- name: "{{ ansible_user }} joins the apache group"
#  user:
#    name: "{{ ansible_user }}"
#    groups: apache
#    append: true
#
#- name: "Ensure {{ website_install_git_known_host }} is a known host for {{ ansible_user }}"
#  lineinfile:
#    dest: "/home/{{ ansible_user }}/.ssh/known_hosts"
#    create: yes
#    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + website_install_git_known_host) }}"
#    regexp: "{{ website_install_git_known_host_regex }}"
#
#- name: "Ensure {{ ansible_user }} owns /home/{{ ansible_user }}/.ssh/known_hosts"
#  file:
#    dest: "/home/{{ ansible_user }}/.ssh/known_hosts"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    state: file
#    mode: u=rwX,g=rX,o=rX

- name: "Ensure DB {{ website_install_env_database_name }} exists"
  mysql_db:
    name: "{{ website_install_env_database_name }}"
    state: present

- name: Add / replace default SSL config
  template:
    src: ssl.conf.j2
    dest: "{{ website_install_default_ssl_conf_file }}"
    force: true

- name: Add virtual host
  template:
    src: vhost.conf.j2
    dest: "{{ website_install_conf_scan_folder }}/{{ website_install_dir_name }}.conf"

- name: Zap old git checkout in /tmp
  file:
    path: "/tmp/{{ website_install_dir_name }}"
    state: absent

- name: Check out site git repo to /tmp, using SSH
  git:
    repo: "{{ website_install_repo_ssh_uri }}"
    version: "{{ website_install_repo_version }}"
    dest: "/tmp/{{ website_install_dir_name }}"
    clone: true
    accept_hostkey: true
  become: false

- name: Zap old installed website
  file:
    path: "{{ website_install_dir }}"
    state: absent

- name: "Copy repo checkout to {{ website_install_dir }}"
  command: "mv /tmp/{{ website_install_dir_name }} /var/www/"
  changed_when: false

- name: Add standard .env file
  template:
    src: env.j2
    dest: "{{ website_install_dir }}/.env"

- name: Add extra lines to .env file
  lineinfile:
    dest: "{{ website_install_dir }}/.env"
    line: "{{ item.name }}={{ item.value }}"
  with_items: "{{ website_install_env_extra }}"
  no_log: true

- name: Add useless but required .env.local.php file
  template:
    src: env.local.php.j2
    dest: "{{ website_install_dir }}/.env.local.php"

- name: Install php project libraries using composer
  composer:
    command: install
    working_dir: "{{ website_install_dir }}"
    # composer does not see scripts as secure when running as root, you would get a warning
    no_scripts: true
    # change this on prod
    no_dev: false

- name: Clean project cache using console
  command: php bin/console cache:clear
  args:
    chdir: "{{ website_install_dir }}"
  changed_when: false

- name: Install project assets using console
  command: php bin/console assets:install
  args:
    chdir: "{{ website_install_dir }}"
  changed_when: false

- name: Run DB migrations using console
  command: php bin/console doctrine:migrations:migrate -n
  args:
    chdir: "{{ website_install_dir }}"
  changed_when: false

- name: Load DB fixtures using console
  command: php bin/console doctrine:fixtures:load -n
  args:
    chdir: "{{ website_install_dir }}"
  changed_when: false

- name: "Ensure apache is the owner of and permissions are correct for {{ website_install_dir }}"
  file:
    dest: "{{ website_install_dir }}"
    owner: apache
    group: apache
    mode: u=rwX,g=rX,o=rX
    recurse: true

- name: Restart Apache
  service:
    name: httpd
    state: restarted