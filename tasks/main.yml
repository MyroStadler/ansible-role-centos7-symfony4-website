---
# tasks file for myrostadler.centos7_symfony4_website
- set_fact: install_dir="/var/www/{{ install_dir_name }}"

- name: Get mysql server version
  command: "mysql -uroot -p{{ env_database_root_password }} -e 'SELECT VERSION();'"
  register: mysql_server_version
- set_fact: env_database_server_version="{{ mysql_server_version.stdout_lines[1] }}"

- name: Show mysql server version
  debug:
    msg: "{{ env_database_server_version }}"

- name: Get the remote user
  become: false
  command: whoami
  register: remote_user

- set_fact: remote_username="{{ remote_user.stdout }}"

- name: "{{ remote_username }} joins the apache group"
  user:
    name: "{{ remote_username }}"
    groups: apache
    append: true

- name: "Ensure git.unipart.io is a known host for {{ remote_username }}"
  lineinfile:
    dest: "/home/{{ remote_username }}/.ssh/known_hosts"
    create: yes
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa git.unipart.io') }}"
    regexp: "^git\\.unipart\\.io"

- name: "Ensure {{ remote_username }} owns /home/{{ remote_username }}/.ssh/known_hosts"
  file:
    dest: "/home/{{ remote_username }}/.ssh/known_hosts"
    owner: "{{ remote_username }}"
    group: "{{ remote_username }}"
    state: file
    mode: u=rwX,g=rX,o=rX

- name: "Ensure DB {{ env_database_name }} exists"
  mysql_db:
    name: "{{ env_database_name }}"
    state: present

- name: Add virtual host
  template:
    src: vhost.conf.j2
    dest: "/etc/httpd/conf.d/{{ install_dir_name }}.conf"

- name: Zap old git checkout in /tmp
  file:
    path: "/tmp/{{ install_dir_name }}"
    state: absent

- name: Check out site git repo to /tmp, using SSH
  git:
    repo: "{{ install_repo_ssh}}"
    version: "{{ install_repo_version }}"
    dest: "/tmp/{{ install_dir_name }}"
    # issue with being root for git checkout
  become: false

- name: Zap old installed website
  file:
    path: "{{ install_dir }}"
    state: absent

- name: "Copy repo checkout to {{ install_dir }}"
  command: "mv /tmp/{{ install_dir_name }} /var/www/"

- name: Add standard .env file
  template:
    src: env.j2
    dest: "{{ install_dir }}/.env"

- name: Add extra lines to .env file
  lineinfile:
    dest: "{{ install_dir }}/.env"
    line: "{{ item.name }}={{ item.value }}"
  with_items: "{{ env_extra }}"

- name: Add useless but required .env.local.php file
  template:
    src: env.local.php.j2
    dest: "{{ install_dir }}/.env.local.php"

- name: Install php project libraries using composer
  composer:
    command: install
    working_dir: "{{ install_dir }}"
    # composer does not see scripts as secure when running as root, you would get a warning
    no_scripts: true
    # change this on prod
    no_dev: false

- name: Clean project cache using console
  command: php bin/console cache:clear
  args:
    chdir: "{{ install_dir }}"

- name: Install project assets using console
  command: php bin/console assets:install
  args:
    chdir: "{{ install_dir }}"

- name: Run DB migrations using console
  command: php bin/console doctrine:migrations:migrate -n
  args:
    chdir: "{{ install_dir }}"

- name: Load DB fixtures using console
  command: php bin/console doctrine:fixtures:load -n
  args:
    chdir: "{{ install_dir }}"

- name: "Ensure apache is the owner of and permissions are directories 755 / files 644 for {{ install_dir }}"
  file:
    dest: "{{ install_dir }}"
    owner: apache
    group: apache
    mode: u=rwX,g=rX,o=rX
    recurse: true

- name: Restart Apache
  service:
    name: httpd
    state: restarted